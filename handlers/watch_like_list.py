from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from sqlalchemy import select

from bot_create import bot
from database import is_registered, give_user_who_like, user_questionnaire_template
from database.database import Questionnaire, engine
from keyboards import *
from states import FSMWatchList, FSMMenu


async def watch_next(message: types.Message, state: FSMContext):
    if message.text == '–ó–∞–∫—ñ–Ω—á–∏—Ç–∏ –ø–µ—Ä–µ–≥–ª—è–¥':
        await state.finish()
        await FSMMenu.status.set()
        await bot.send_message(message.from_user.id, '–©–æ –¥–∞–ª—ñ?', reply_markup=main_manu_buttons)
    elif message.text == 'üíô' or '‚ùå':
        async with state.proxy() as data:
            if message.text == 'üíô':
                result = engine.connect().execute(select(Questionnaire).where(Questionnaire.user_id == message.from_user.id)).fetchone()
                current_user_username = message.from_user.username
                await bot.send_photo(
                    data['user_id'],
                    result.photo,
                    caption=f"–£ –≤–∞—Å –≤–∑–∞—î–º–Ω–∞ —Å–∏–º–ø–∞—Ç—ñ—è –∑:\n\n{result.about}.\n\n–ô–æ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º: @{current_user_username}")

                await bot.send_message(message.from_user.id, f'–û—Å—å —Ç–µ–ª–µ–≥—Ä–∞–º —Ü—å–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: @{data["username"]}'
                                                             f'.\n–ü—Ä–∏—î–º–Ω–æ–≥–æ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è.')
            if message.text == '‚ùå':
                pass
            try:
                questionnaire, user_message = give_user_who_like(message.from_user.id)
                about = f'{questionnaire.about}'
                data['user_id'] = questionnaire.user_id
                data['username'] = questionnaire.username
                if str(user_message) == 'None':
                    await bot.send_photo(
                        message.from_user.id,
                        questionnaire.photo,
                        caption=f'{questionnaire.about}',
                        reply_markup=wlbutton
                    )
                else:
                    await bot.send_photo(
                        message.from_user.id,
                        questionnaire.photo,
                        caption=f'{questionnaire.about}'
                                f'\n\n–û–Ω –æ—Å—Ç–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–Ω–∏—è:\n{user_message}',
                        reply_markup=wlbutton
                    )
            except:
                await state.finish()
                await FSMMenu.status.set()
                await bot.send_message(
                    message.from_user.id,
                    '–£ –≤–∞—Å –±—ñ–ª—å—à–µ –Ω–µ–º–∞—î —Å–∏–º–ø–∞—Ç—ñ–π.',
                    reply_markup=main_manu_buttons
                )


def register_user_handlers(dp: Dispatcher):
    dp.register_message_handler(watch_next, state=FSMWatchList.user)
